[project]
name = "pelican-readtime"
version = "0.0.0"
description = "An article estimated read time plugin for Pelican static site generator. After Pelican generated the content of each page, the plugin read through the generated HTML content and strip all the tags, count all the word, then utilize average human read speed to calculate the read time of each article. The read time is passed over to the 'content' object of the article so Jinja template can use it to display the read time on wherever appropriate."
authors = [
    {name = "Jordi Burgos"},
    {name = "Michael Li"},
    {name = "Mirek DÅ‚ugosz", email = "mirek@mirekdlugosz.com"},
]
license = { text = "AGPL-3.0" }
readme = "README.md"
keywords = ["pelican", "plugin"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: Pelican",
    "Framework :: Pelican :: Plugins",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = "~=3.9"
dependencies = [
    "pelican>=4.5",
]
[dependency-groups]
lint = [
    "invoke>=2.2",
    "ruff>=0.9.1,<1.0.0",
]
test = [
    "markdown>=3.4",
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-sugar>=1.0",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.build]
source-includes = [
    "CHANGELOG.md",
    "CONTRIBUTING.md",
]
includes = ["pelican/"]
excludes = ["**/.DS_Store", "**/test_data/**", "tasks.py"]

[tool.ruff.lint]
select = [
  "B",   # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4",  # flake8-comprehensions
  "D",   # pydocstyle
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "PGH", # pygrep-hooks
  "PL",  # pylint
  "RET", # flake8-return
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TID", # flake8-tidy-imports
  "TRY", # tryceratops
  "UP",  # pyupgrade
  "W",   # pycodestyle
  "YTT", # flake8-2020
]

ignore = [
  "D100",    # missing docstring in public module
  "D104",    # missing docstring in public package
  "D203",    # blank line before class docstring
  "D213",    # multi-line docstring summary should start at the second line
  "ISC001",  # disabled so `ruff format` works without warning
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["pelican"]
